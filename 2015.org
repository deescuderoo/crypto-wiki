#+TITLE: Papers from 2015
#+DESCRIPTION:
#+KEYWORDS:
#+STARTUP:  content
#+OPTIONS: toc:1 H:4 num:1

- [[wiki:index][Index]]
  
* [[https://eprint.iacr.org/2014/889][Efficient Zero-Knowledge Proofs for Commitments from Learning With Errors over Rings (Fabrice Benhamouda and Stephan Krenn and Vadim Lyubashevsky and Krzysztof Pietrzak)]]
** Short Description
Commitments and ZKPs for knowledge of committed values.

** Abstract
We design an efficient commitment scheme, and companion zero-knowledge proofs of knowledge, based on the learning with errors over rings (RLWE) problem. In particular, for rings in which almost all elements have inverses, we construct a perfectly binding commitment scheme whose hiding property relies on the RLWE assumption. Our scheme maps elements from the ring (or equivalently, n elements from F_q) to a small constant number of ring elements. We then construct Sigma-protocols for proving, in a zero-knowledge manner, knowledge of the message contained in a commitment. We are able to further extend our basic protocol to allow us to prove additive and multiplicative relations among committed values. Our protocols have a communication complexity of O(Mn\log q) and achieve a negligible knowledge error in one run. Here M is the constant from a rejection sampling technique that we employ, and can be set close to 1 by adjusting other parameters. Previously known Sigma-protocols for LWE-related languages either relied on ``smudging'' out the error (which necessitates working over large fields, resulting in poor efficiency) or only achieved a noticeable or even constant knowledge error (thus requiring many repetitions of the protocol). Secure multi-party computation (MPC) allows several mutually distrustful parties to securely compute a joint function of their inputs and exists in two main variants: In *synchronous* MPC parties are connected by a synchronous network with a global clock, and protocols proceed in *rounds* with strong delivery guarantees, whereas *asynchronous* MPC protocols can be deployed even in networks that deliver messages in an arbitrary order and impose arbitrary delays on them.

** My Summary

The authors extend the basic commitment scheme from [[[xie][1]]].
It works like this: c = \ba m + \bb r + f^-1\be (the extension comes in the f^-1).
The computationally hiding property comes from RLWE, and perfect binding comes from an analysis on the specific bounds.
Their challenge space consists of bounded polynomials with binary coefficients and degree at most n/2. 
If you choose the cyclotomic ring so that it splits into two factors (requires q cong 3 mod 8) then every polynomial of degree at most n/2 is invertible (I believe this is because f(x) cong phi(x) => f(x) cong a(x) and f(x) cong b(x), where a and b are the factors of phi).
      
*** References
1) <<xie>>X. Xie, R. Xue, and M. Wang. Zero Knowledge Proofs from Ring-LWE. In M. Abdalla, C. Nita-Rotaru, and R. Dahab, editors, CANS 2013, volume 8257 of LNCS, pages 57â€“73. Springer, 2013.

 
* [[https://eprint.iacr.org/2016/768][High-Throughput Semi-Honest Secure Three-Party Computation with an Honest Majority (Toshinori Araki and Jun Furukawa and Yehuda Lindell and Ariel Nof and Kazuma Ohara)]]
Presented at CCS 2016.
** Short Description
Three-party MPC with cheap semi-honest multiplications.

** Abstract
In this paper, we describe a new information-theoretic protocol (and a computationally-secure variant) for secure {\em three}-party computation with an honest majority. The protocol has very minimal computation and communication; for Boolean circuits, each party sends only a single bit for every AND gate (and nothing is sent for XOR gates). Our protocol is (simulation-based) secure in the presence of semi-honest adversaries, and achieves privacy in the client/server model in the presence of malicious adversaries.

On a cluster of three 20-core servers with a 10Gbps connection, the implementation of our protocol carries out over \textit{1.3 million} AES computations per second, which involves processing over \textit{7 billion gates per second}. In addition, we developed a Kerberos extension that replaces the ticket-granting-ticket encryption on the Key Distribution Center (KDC) in MIT-Kerberos with our protocol, using keys/ passwords that are shared between the servers. This enables the use of Kerberos while protecting passwords. Our implementation is able to support a login storm of over 35,000 logins per second, which suffices even for very large organizations. Our work demonstrates that high-throughput secure computation is possible on standard hardware.
  
** My Summary
I didn't read this paper in detail.
The authors propose a secret sharing scheme which resembles replicated SS, although it is a bit different.
To share a secret $v\in\mathbb{Z}_{2^k}$ in their scheme, each party $P_i$ for $i=1,2,3$ has a masked version of $x$, $a_i=x_i-v\bmod 2^k$, where the $x_i$'s are random but conditioned on $x_1+x_2+x_3=0\bmod 2^k$
$P_i$ also has the 'key' $x_{i+1}$.
It is easy to see that any pair of parties can reconstruct the secret, but no single party learns anything about it.

The scheme above is clearly linearly homomorphic.
To handle multiplications, it is assumed that the parties have correlated randomness $\alpha,\beta,\gamma$ such that $\alpha+\beta+\gamma = 0$.
These can be preprocessed easily by pre-agreeing on certain keys for a PRF (e.g. AES) and then using the PRF in a non-interactive manner to generate the correlated randomness.
The multiplication itself is rather short and I suggest reading it directly from the paper in Section 2.3.
